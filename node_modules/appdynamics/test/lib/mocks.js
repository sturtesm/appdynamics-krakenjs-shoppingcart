var util = require('util')
,   EventEmitter = require('events').EventEmitter
,   Logger = require('../../lib/core/logger').Logger;

// ------------------------------------------------------------------------

function AgentMock() {
    this.logger = new Logger();
}

util.inherits(AgentMock, EventEmitter);

exports.AgentMock = AgentMock;

// ------------------------------------------------------------------------

function ConfigMock(agent) { 
    this.agent = agent;
    this.values = {}; 
}

exports.ConfigMock = ConfigMock;

ConfigMock.prototype.update = function(config) {
    this.values = config;
    this.agent.emit('configUpdated');
}

ConfigMock.prototype.getConfigValue = function(path) {
    var parts = path.split('.'), ctx = this.values;

    if (path in this.values) return this.values[path];

    while (parts.length) {
        ctx = ctx[parts.shift()];
        if (!ctx) return undefined;
    }
    
    return ctx;
}

// ------------------------------------------------------------------------
